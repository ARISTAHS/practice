{"ast":null,"code":"import _slicedToArray from\"C:/Users/paran/OneDrive/\\uBB38\\uC11C/GitHub/practice/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import'../style/PortFolio.scss';import{portFolioDate}from'../components/Date';import PortFolioUse from'../components/PortFolioUse';// 화살표 함수 표현식 사용 \nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PortFolio=function PortFolio(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),pofol=_useState2[0],setPofol=_useState2[1];var current=function current(index){console.log('Clicked Index:',index);// 추가된 부분\nsetPofol(index);};return/*#__PURE__*/ (// background img를 css로 각기 기정 하는 방법 , useState로 하여 태그 안에 직접 style 지정하는 방법 존재. -> 전자로 진행.\n_jsxs(\"section\",{id:\"Portfolio\",className:\"pf-content\".concat(pofol+1),children:[/*#__PURE__*/_jsx(\"h3\",{className:\"hidden\",children:\"\\uD3EC\\uD2B8\\uD3F4\\uB9AC\\uC624\"}),/*#__PURE__*/_jsx(\"div\",{className:\"tab-area\",children:/*#__PURE__*/_jsx(\"ul\",{className:\"tab-menu\",children:// map 함수로 portFolioDate 배열 순회\nportFolioDate.map(function(data,index){return/*#__PURE__*/_jsx(\"li\",{onClick:function onClick(){current(index);},className:pofol===index?\"current\":\"\",children:/*#__PURE__*/_jsx(\"button\",{children:data.type})},index);})})}),/*#__PURE__*/_jsx(PortFolioUse,{title:portFolioDate[pofol].title,detail1:portFolioDate[pofol].detail1,detail2:portFolioDate[pofol].detail2,detail3:portFolioDate[pofol].detail3,type:portFolioDate[pofol].type,time:portFolioDate[pofol].time,img:portFolioDate[pofol].img,host:portFolioDate[pofol].host,imageArray:portFolioDate[pofol].imageArray// github={portFolioDate[pofol].github}\n})]}));};export default PortFolio;","map":{"version":3,"names":["React","useState","portFolioDate","PortFolioUse","jsx","_jsx","jsxs","_jsxs","PortFolio","_useState","_useState2","_slicedToArray","pofol","setPofol","current","index","console","log","id","className","concat","children","map","data","onClick","type","title","detail1","detail2","detail3","time","img","host","imageArray"],"sources":["C:/Users/paran/OneDrive/문서/GitHub/practice/src/routes/PortFolio.jsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport '../style/PortFolio.scss';\r\nimport {portFolioDate} from '../components/Date';\r\nimport PortFolioUse from '../components/PortFolioUse';\r\n\r\n// 화살표 함수 표현식 사용 \r\nconst PortFolio = () => {\r\n  const [pofol, setPofol] = useState(0);\r\n\r\n  const current = (index) => {\r\n    console.log('Clicked Index:', index); // 추가된 부분\r\n    setPofol(index);\r\n  }\r\n\r\n  return(\r\n    // background img를 css로 각기 기정 하는 방법 , useState로 하여 태그 안에 직접 style 지정하는 방법 존재. -> 전자로 진행.\r\n    <section id='Portfolio' className={`pf-content${pofol + 1}`}>\r\n      <h3 className=\"hidden\">포트폴리오</h3>\r\n        <div className='tab-area'>\r\n          <ul className=\"tab-menu\">\r\n            {\r\n              // map 함수로 portFolioDate 배열 순회\r\n              portFolioDate.map((data, index) => {\r\n                return (\r\n                  <li\r\n                  key={index}\r\n                  onClick={() => {current(index)} }\r\n                  className={pofol === index ? \"current\" : \"\"}>\r\n                    <button>\r\n                      {data.type}\r\n                    </button>\r\n                  </li>\r\n                )\r\n              })\r\n            }\r\n          </ul>\r\n        </div>\r\n        <PortFolioUse \r\n          title={portFolioDate[pofol].title}\r\n          detail1={portFolioDate[pofol].detail1}\r\n          detail2={portFolioDate[pofol].detail2}\r\n          detail3={portFolioDate[pofol].detail3}\r\n          type={portFolioDate[pofol].type}\r\n          time={portFolioDate[pofol].time}\r\n          img={portFolioDate[pofol].img}\r\n          host={portFolioDate[pofol].host}\r\n          imageArray={portFolioDate[pofol].imageArray}\r\n          // github={portFolioDate[pofol].github}\r\n        />\r\n  \r\n    </section>\r\n  );\r\n\r\n}\r\n\r\nexport default PortFolio;"],"mappings":"0IAAA,MAAO,CAAAA,KAAK,EAAGC,QAAQ,KAAO,OAAO,CACrC,MAAO,yBAAyB,CAChC,OAAQC,aAAa,KAAO,oBAAoB,CAChD,MAAO,CAAAC,YAAY,KAAM,4BAA4B,CAErD;AAAA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBACA,GAAM,CAAAC,SAAS,CAAG,QAAZ,CAAAA,SAASA,CAAA,CAAS,CACtB,IAAAC,SAAA,CAA0BR,QAAQ,CAAC,CAAC,CAAC,CAAAS,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA9BG,KAAK,CAAAF,UAAA,IAAEG,QAAQ,CAAAH,UAAA,IAEtB,GAAM,CAAAI,OAAO,CAAG,QAAV,CAAAA,OAAOA,CAAIC,KAAK,CAAK,CACzBC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAEF,KAAK,CAAC,CAAE;AACtCF,QAAQ,CAACE,KAAK,CAAC,CACjB,CAAC,CAED,oBACE;AACAR,KAAA,YAASW,EAAE,CAAC,WAAW,CAACC,SAAS,cAAAC,MAAA,CAAeR,KAAK,CAAG,CAAC,CAAG,CAAAS,QAAA,eAC1DhB,IAAA,OAAIc,SAAS,CAAC,QAAQ,CAAAE,QAAA,CAAC,gCAAK,CAAI,CAAC,cAC/BhB,IAAA,QAAKc,SAAS,CAAC,UAAU,CAAAE,QAAA,cACvBhB,IAAA,OAAIc,SAAS,CAAC,UAAU,CAAAE,QAAA,CAEpB;AACAnB,aAAa,CAACoB,GAAG,CAAC,SAACC,IAAI,CAAER,KAAK,CAAK,CACjC,mBACEV,IAAA,OAEAmB,OAAO,CAAE,SAAAA,QAAA,CAAM,CAACV,OAAO,CAACC,KAAK,CAAC,EAAG,CACjCI,SAAS,CAAEP,KAAK,GAAKG,KAAK,CAAG,SAAS,CAAG,EAAG,CAAAM,QAAA,cAC1ChB,IAAA,WAAAgB,QAAA,CACGE,IAAI,CAACE,IAAI,CACJ,CAAC,EALNV,KAMD,CAAC,CAET,CAAC,CAAC,CAEF,CAAC,CACF,CAAC,cACNV,IAAA,CAACF,YAAY,EACXuB,KAAK,CAAExB,aAAa,CAACU,KAAK,CAAC,CAACc,KAAM,CAClCC,OAAO,CAAEzB,aAAa,CAACU,KAAK,CAAC,CAACe,OAAQ,CACtCC,OAAO,CAAE1B,aAAa,CAACU,KAAK,CAAC,CAACgB,OAAQ,CACtCC,OAAO,CAAE3B,aAAa,CAACU,KAAK,CAAC,CAACiB,OAAQ,CACtCJ,IAAI,CAAEvB,aAAa,CAACU,KAAK,CAAC,CAACa,IAAK,CAChCK,IAAI,CAAE5B,aAAa,CAACU,KAAK,CAAC,CAACkB,IAAK,CAChCC,GAAG,CAAE7B,aAAa,CAACU,KAAK,CAAC,CAACmB,GAAI,CAC9BC,IAAI,CAAE9B,aAAa,CAACU,KAAK,CAAC,CAACoB,IAAK,CAChCC,UAAU,CAAE/B,aAAa,CAACU,KAAK,CAAC,CAACqB,UACjC;AAAA,CACD,CAAC,EAEG,CAAC,EAGd,CAAC,CAED,cAAe,CAAAzB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}